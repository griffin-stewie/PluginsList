default_platform(:mac)

# When you use CocoaPods, Go to File -> Workspace Settings -> Advanced and select Legacy  https://stackoverflow.com/questions/29731884/xcode-build-setting-build-products-path-configuration-build-dir-is-a-lie

BUILD_DIR = "build"
FRAMEWORK_NAME = "PluginsList.framework"
LIB_NAME = "libPods-PluginsList.a"
PLUGIN_NAME = "PluginsList.sketchplugin"
WORKSPACE = "PluginsList.xcworkspace"
SCHEME = "PluginsList"

# Xcode の Workspace Settings で Advanced.... から Legacy を選択すること

platform :mac do
  desc "Build for development"
  lane :develop do
    configuration = "Debug"
    xcodebuild(
      clean: false,
      build: true,
      scheme: SCHEME,
      configuration: configuration,
      workspace: WORKSPACE,
      xcargs: "BUILD_FROM_FASTLANE=true"
    )

    File.expand_path(File.join("..", BUILD_DIR, configuration))
  end


  desc "Build framework"
  lane :build do
    configuration = "Release"
    xcodebuild(
      clean: true,
      build: true,
      scheme: SCHEME,
      configuration: configuration,
      workspace: WORKSPACE,
      xcargs: "BUILD_FROM_FASTLANE=true"
    )

    File.expand_path(File.join("..", BUILD_DIR, configuration))
  end

  desc "Package plugin, building framework unless provided"
  lane :package do |options|
    fastlane_require "fileutils"

    build_dir = options[:build_dir]
    unless build_dir
      build_dir = build
    end

    plugin_dir = File.join(build_dir, PLUGIN_NAME)
    FileUtils.rm_rf(plugin_dir)

    plugin_compressed_path = "#{plugin_dir}.zip"
    FileUtils.rm_f(plugin_compressed_path)

    FileUtils.mkdir_p(plugin_dir)

    contents_dir = File.join(plugin_dir, "Contents")
    FileUtils.mkdir_p(contents_dir)

    resources_dir = File.join(contents_dir, "Resources")
    FileUtils.mkdir_p(resources_dir)

    framework_dir = File.join(build_dir, FRAMEWORK_NAME)
    FileUtils.copy_entry(framework_dir, File.join(resources_dir, FRAMEWORK_NAME))
    framework_dir = File.join(build_dir, LIB_NAME)
    FileUtils.copy_entry(framework_dir, File.join(resources_dir, LIB_NAME))

    FileUtils.cp("../plugin/img/icon.png", resources_dir)

    sketch_dir = File.join(contents_dir, "Sketch")
    FileUtils.mkdir_p(sketch_dir)

    FileUtils.cp("../plugin/manifest.json", sketch_dir)
    FileUtils.cp("../plugin/src/index.js", sketch_dir)

    sh("ditto -c -k --rsrc --keepParent \"#{plugin_dir}\" \"#{plugin_compressed_path}\"")

    plugin_dir
  end

  desc "Package and install plugin to Sketch"
  lane :install do |options|
    fastlane_require "fileutils"

    plugin_dir = package(options)
    plugin_link = File.join(Dir.home, "Library", "Application Support", "com.bohemiancoding.sketch3", "Plugins", PLUGIN_NAME)

    FileUtils.rm_f(plugin_link)
    FileUtils.ln_s(plugin_dir, plugin_link)
  end

  desc "Publish and Package"
  lane :publish do |options|
    fastlane_require "fileutils"

    # bump options => [<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease [--preid=<prerelease-id>] | from-git]
    # See `npm help version`

    plugin_dir = package(options)
    plugin_compressed_path = "#{plugin_dir}.zip"
    FileUtils.rm_f(plugin_compressed_path)

    sh("cd .. && skpm publish #{options[:bump]} && cd -")
  end
end
